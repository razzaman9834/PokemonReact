{"version":3,"sources":["pattern.png","helpers/typeColors.js","helpers/typeColors2.js","components/Card/Card.js","components/Card/index.js","services/pokemon.js","components/Navbar/RightNav.jsx","components/Navbar/Burger.jsx","components/Navbar/Navbar.jsx","App.js","SimpleTabs.js","serviceWorker.js","index.js"],"names":["module","exports","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","typeColors2","Card","pokemon","className","style","backgroundColor","types","type","name","src","sprites","front_default","alt","map","weight","height","abilities","ability","base_experience","trigger","modal","nested","close","onClick","stats","base_stat","getPokemon","url","Promise","resolve","reject","fetch","then","res","json","data","getAllPokemon","a","Ul","styled","ul","open","RightNav","StyledBurger","div","Burger","useState","setOpen","Nav","nav","Navbar","App","count","setCount","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","pokemonName","setPokemonName","pokemonChosen","setPokemonchosen","species","img","hp","attack","defence","setPokemon","initialURL","useEffect","response","next","previous","loadPokemon","results","fetchData","prev","all","pokemonRecord","_pokemonData","searchPokemon","axios","get","console","log","bt","setbt","background","backgroundImage","textAlign","onSubmit","e","preventDefault","placeholder","required","onChange","event","target","value","toLowerCase","length","disabled","i","key","TabPanel","props","children","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","palette","paper","SimpleTabs","classes","React","setValue","AppBar","position","Tabs","newValue","aria-label","Tab","label","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47644181.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pattern.2f35105b.png\";","const typeColors = {\r\n    bug: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#f7de3f',\r\n    normal: '#a4acaf',\r\n    pyschic: '#f366b9',\r\n    steel: '#9eb7b',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4'\r\n}\r\n\r\nexport default typeColors;","const typeColors2 = {\r\n  bug: \"#f3f8ed\",\r\n  dragon: \"#d7eaf4\",\r\n  fairy: \"#fdceef\",\r\n  fire: \"#fee1cd\",\r\n  ghost: \"#d6cfe3\",\r\n  ground: \"#fcf3b6\",\r\n  normal: \"#e4e6e7\",\r\n  pyschic: \"#fbd0e9\",\r\n  steel: \"#fafee7\",\r\n  dark: \"#e6e6e6\",\r\n  electric: \"#fbf5d0\",\r\n  fighting: \"#f4d2bd\",\r\n  flying: \"#d0f2fb\",\r\n  grass: \"#e8f4d7\",\r\n  ice: \"#d2f0f9\",\r\n  poison: \"#f5edf7\",\r\n  rock: \"#fbf8ea\",\r\n  water: \"#ecf4f9\",\r\n};\r\n\r\nexport default typeColors2;\r\n","import React from \"react\";\r\nimport typeColors from \"../../helpers/typeColors\";\r\nimport \"./style.css\";\r\nimport typeColors2 from \"../../helpers/typeColors2\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nfunction Card({ pokemon }) {\r\n  return (\r\n    <div\r\n      className=\"Card\"\r\n      style={{\r\n        backgroundColor: typeColors2[pokemon.types[0].type.name],\r\n      }}\r\n    >\r\n      <div className=\"Card__img\">\r\n        <img src={pokemon.sprites.front_default} alt=\"\" />\r\n      </div>\r\n      <div className=\"Card__name\">{pokemon.name}</div>\r\n      <div className=\"Card__types\">\r\n        {pokemon.types.map((type) => {\r\n          return (\r\n            <>\r\n              <div\r\n                className=\"Card__type\"\r\n                style={{ backgroundColor: typeColors[type.type.name] }}\r\n              >\r\n                {type.type.name}\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"Card__info\">\r\n        <div className=\"Card__data Card__data--weight\">\r\n          <p className=\"title\">Weight</p>\r\n          <p>{pokemon.weight}</p>\r\n        </div>\r\n        <div className=\"Card__data Card__data--weight\">\r\n          <p className=\"title\">Height</p>\r\n          <p>{pokemon.height}</p>\r\n        </div>\r\n        <div className=\"Card__data Card__data--ability\">\r\n          <p className=\"title\">Ability</p>\r\n          <p>{pokemon.abilities[0].ability.name}</p>\r\n        </div>\r\n        <div className=\"Card__data Card__data--ability\">\r\n          <p className=\"title\">Base Experience</p>\r\n          <p>{pokemon.base_experience}</p>\r\n        </div>\r\n\r\n        <div>\r\n          <Popup\r\n            trigger={<button className=\"btn2\"> More Details </button>}\r\n            modal\r\n            nested\r\n          >\r\n            {(close) => (\r\n              <div className=\"modal\">\r\n                <button className=\"close\" onClick={close}>\r\n                  &times;\r\n                </button>\r\n                <div\r\n                  className=\"header\"\r\n                  style={{\r\n                    backgroundColor: typeColors2[pokemon.types[0].type.name],\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  More Detail About {pokemon.name}{\" \"}\r\n                </div>\r\n                <div className=\"content\">\r\n                  {\" \"}\r\n                  <h5>Hp : {pokemon.stats[0].base_stat}</h5>\r\n                  <h5>Attack : {pokemon.stats[1].base_stat}</h5>\r\n                  <h5>Defence : {pokemon.stats[2].base_stat}</h5>{\" \"}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Popup>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\n\r\nexport default Card;\r\n","export function getPokemon({ url }) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n\r\nexport async function getAllPokemon(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Ul = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n\r\n  li {\r\n    padding: 18px 10px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex-flow: column nowrap;\r\n    background-color: rgb(63, 80, 181);\r\n    position: fixed;\r\n    transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(100%)\")};\r\n    top: 30px;\r\n    right: 0;\r\n    height: 100vh;\r\n    width: 200px;\r\n    transition: transform 0.3s ease-ease-out;\r\n\r\n    li {\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RightNav = ({ open }) => {\r\n  return (\r\n    <Ul open={open}>\r\n      <li>Sign In</li>\r\n      <li>Sign Up</li>\r\n    </Ul>\r\n  );\r\n};\r\n\r\nexport default RightNav;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RightNav from \"./RightNav\";\r\n\r\nconst StyledBurger = styled.div`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  position: fixed;\r\n  top: 15px;\r\n  right: 20px;\r\n  z-index: 20;\r\n  display: none;\r\n\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-flow: column nowrap;\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background-color: ${({ open }) => (open ? \"#ccc\" : \"#333\")};\r\n    border-radius: 10px;\r\n    transform-origin: 1px;\r\n    transition: all 0.3s linear;\r\n\r\n    &:nth-child(1) {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      transform: ${({ open }) => (open ? \"translateX(100%)\" : \"translateX(0)\")};\r\n      opacity: ${({ open }) => (open ? 0 : 1)};\r\n    }\r\n\r\n    &:nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Burger = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <StyledBurger open={open} onClick={() => setOpen(!open)}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </StyledBurger>\r\n      <RightNav open={open} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Burger from \"./Burger\";\r\n\r\nconst Nav = styled.nav`\r\n  width: 100%;\r\n  height: 80px;\r\n  border-bottom: 2px solid #f1f1f1;\r\n  padding: 0px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgb(63, 80, 181);\r\n  color: white;\r\n  border-radius: 10px;\r\n\r\n  .logo {\r\n    padding: 25px;\r\n  }\r\n`;\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <Nav>\r\n      <div className=\"logo\">POKEMON API PROJECT BY AMAN RAJ</div>\r\n      <Burger />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport { getPokemon, getAllPokemon } from \"./services/pokemon\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport backgroundImage from \"./pattern.png\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport typeColors from \"../src/helpers/typeColors\";\r\nimport typeColors2 from \"../src/helpers/typeColors2\";\r\n\r\nfunction App() {\r\n  const [count, setCount] = useState(1);\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(\"\");\r\n  const [prevUrl, setPrevUrl] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [pokemonName, setPokemonName] = useState(\"\");\r\n  const [pokemonChosen, setPokemonchosen] = useState(false);\r\n\r\n  const [pokemon, setPokemon] = useState({\r\n    name: \"\",\r\n    species: \"\",\r\n    img: \"\",\r\n    hp: \"\",\r\n    attack: \"\",\r\n    defence: \"\",\r\n    type: \"\",\r\n    height: \"\",\r\n    ability: \"\",\r\n    weight: \"\",\r\n    base_experience: \"\",\r\n  });\r\n  const initialURL = \"https://pokeapi.co/api/v2/pokemon\";\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let response = await getAllPokemon(initialURL);\r\n      setNextUrl(response.next);\r\n      setPrevUrl(response.previous);\r\n      await loadPokemon(response.results);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const next = async () => {\r\n    setCount(count + 1);\r\n    setLoading(true);\r\n    let data = await getAllPokemon(nextUrl);\r\n    await loadPokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n  };\r\n\r\n  const prev = async () => {\r\n    if (!prevUrl) return;\r\n    setLoading(true);\r\n    let data = await getAllPokemon(prevUrl);\r\n    await loadPokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n    setCount(count - 1);\r\n  };\r\n\r\n  const loadPokemon = async (data) => {\r\n    let _pokemonData = await Promise.all(\r\n      data.map(async (pokemon) => {\r\n        let pokemonRecord = await getPokemon(pokemon);\r\n        return pokemonRecord;\r\n      })\r\n    );\r\n    setPokemonData(_pokemonData);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchPokemon();\r\n  };\r\n\r\n  const searchPokemon = () => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        setPokemon({\r\n          name: pokemonName,\r\n          species: response.data.species.name,\r\n          img: response.data.sprites.front_default,\r\n          hp: response.data.stats[0].base_stat,\r\n          attack: response.data.stats[1].base_stat,\r\n          defence: response.data.stats[2].base_stat,\r\n          type: response.data.types[0].type.name,\r\n          height: response.data.height,\r\n          ability: response.data.abilities[0].ability.name,\r\n          weight: response.data.weight,\r\n          base_experience: response.data.base_experience,\r\n        });\r\n        setPokemonchosen(true);\r\n      });\r\n  };\r\n\r\n  const hide = () => {\r\n    setPokemonchosen(false);\r\n  };\r\n\r\n  const [bt, setbt] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"App1\" style={{ background: `url(${backgroundImage})` }}>\r\n        <div>\r\n          {loading ? (\r\n            <h1 style={{ textAlign: \"center\" }}>Loading...</h1>\r\n          ) : (\r\n            <>\r\n              <div>\r\n                <div className=\"App\">\r\n                  <div className=\"TitleSection\">\r\n                    <h1 className=\"pokhead\">Pokemon Library</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                      <label>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"enter pokemon name\"\r\n                          required={true}\r\n                          onChange={(event) => {\r\n                            setPokemonName(event.target.value.toLowerCase());\r\n                            let item = event.target.value;\r\n                            if (item.length < 1) {\r\n                              setbt(true);\r\n                            } else {\r\n                              setbt(false);\r\n                            }\r\n                          }}\r\n                        />\r\n                      </label>\r\n                    </form>\r\n                  </div>\r\n\r\n                  <br />\r\n                  <br />\r\n\r\n                  <div className=\"DisplaySection\">\r\n                    {!pokemonChosen ? null : (\r\n                      <>\r\n                        {\" \"}\r\n                        <div\r\n                          className=\"Card\"\r\n                          style={{\r\n                            backgroundColor: typeColors2[pokemon.type],\r\n                          }}\r\n                        >\r\n                          <div className=\"Card__img\">\r\n                            <img src={pokemon.img} alt=\"\" />\r\n                          </div>\r\n                          <div className=\"Card__name\">{pokemon.name}</div>\r\n\r\n                          <div className=\"Card__types\">\r\n                            <div\r\n                              className=\"Card__type\"\r\n                              style={{\r\n                                backgroundColor: typeColors[pokemon.type],\r\n                              }}\r\n                            >\r\n                              {pokemon.type}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"Card__info\">\r\n                            <div className=\"Card__data Card__data--weight\">\r\n                              <p className=\"title\">\r\n                                Weight : {pokemon.weight} kg\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"Card__data Card__data--weight\">\r\n                              <p className=\"title\">\r\n                                Height :{pokemon.height} feet\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"Card__data Card__data--ability\">\r\n                              <p className=\"title\">\r\n                                Ability : {pokemon.ability}\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"Card__data Card__data--ability\">\r\n                              <p className=\"title\">\r\n                                Base Experience : {pokemon.base_experience}\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"Card__data Card__data--ability\">\r\n                              <p className=\"title\">Hp : {pokemon.hp}</p>\r\n                            </div>\r\n\r\n                            <div className=\"Card__data Card__data--ability\">\r\n                              <p className=\"title\">Attack : {pokemon.attack}</p>\r\n                            </div>\r\n\r\n                            <div className=\"Card__data Card__data--ability\">\r\n                              <p className=\"title\">\r\n                                defence : {pokemon.defence}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"btn\">\r\n                <button onClick={prev}>Prev Page</button>\r\n                <button>Page No. {count} </button>\r\n                <button onClick={next}>Next Page</button>\r\n\r\n                <button onClick={searchPokemon} disabled={bt}>\r\n                  Search\r\n                </button>\r\n\r\n                {pokemonChosen ? <button onClick={hide}>Hide</button> : null}\r\n              </div>\r\n\r\n              <div className=\"grid-container\">\r\n                {pokemonData.map((pokemon, i) => {\r\n                  return <Card key={i} pokemon={pokemon} />;\r\n                })}\r\n              </div>\r\n              <br />\r\n\r\n              <div className=\"btn\">\r\n                <button onClick={prev}>Prev Page</button>\r\n                <button onClick={next}>Next Page</button>\r\n              </div>\r\n\r\n              <br />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport App from \"./App\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 0,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Poke Dictionary\" {...a11yProps(0)} />\r\n          <Tab label=\"About\" {...a11yProps(1)} />\r\n          <Tab label=\"Contact\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <App />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Pokedesk App to get data of pokemon\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <h2> Contact - 9087654321</h2> <h3>Email - Test@gmail.com</h3>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport SimpleTabs from \"./SimpleTabs\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<SimpleTabs />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}